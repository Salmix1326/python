-- Модуль 15. Вступ до теорії баз даних
-- Тема: Вступ до теорії баз даних.
-- Частина 3
-- Завдання 1

-- #==============================================================================================================

-- База даних Академія (Academy) містить інформацію про співробітників та внутрішній порядок академії.
-- Викладачі, які читають лекції в академії, занесені до таблиці
-- Викладачі (Teachers), в якій зібрано основну інформацію: ім’я, прізвище, дані про зарплату, дата прийому на роботу.
-- Також у базі даних є інформація про групи, яка зберігається в таблиці Групи (Groups). 
-- Дані про факультети та кафедри містяться в таблицях Факультети (Faculties) та Кафедри (Departments) відповідно.

CREATE DATABASE ACADEMY;

-- #==============================================================================================================
-- Кафедри (Departments)
-- ■ Ідентифікатор (Id). Унікальний ідентифікатор кафедри.
-- ▷ Тип даних — int.
-- ▷ Автоприріст.
-- ▷ Не містить null-значення.
-- ▷ Первинний ключ.
-- #=========================
-- ■ Фінансування (Financing). Фонд фінансування кафедри.
-- ▷ Тип даних — money.
-- ▷ Не містить null-значення.
-- ▷ Не може бути менше, ніж 0.
-- ▷ Значення за замовчуванням — 0.
-- #=========================
-- ■ Назва (Name). Назва кафедри.
-- ▷ Тип даних — varchar(100).
-- ▷ Не містить null-значення.
-- ▷ Не може бути порожньою.
-- ▷ Має бути унікальною.

CREATE TABLE DEPARTMENTS (
	ID SERIAL NOT NULL PRIMARY KEY,
	FINANCING NUMERIC(12,2) NOT NULL CHECK(FINANCING >= 0) DEFAULT 0,
	NAME VARCHAR(100) NOT NULL CHECK(NAME != '') UNIQUE
)

INSERT INTO DEPARTMENTS (FINANCING, NAME) VALUES
(20000.00, 'Кафедра экономики'),
(18000.00, 'Кафедра бухгалтерского учёта и аудита'),
(22000.00, 'Кафедра финансов и банковского дела'),
(19000.00, 'Кафедра маркетинга и менеджмента'),
(21000.00, 'Кафедра информационных систем в экономике'),
(17000.00, 'Кафедра бизнес-анализа'),
(16000.00, 'Кафедра цифровой экономики'),
(15000.00, 'Кафедра программирования и IT-проектов'),
(14000.00, 'Кафедра управления данными и базами данных'),
(20000.00, 'Кафедра электронной коммерции');

SELECT * FROM DEPARTMENTS;

-- #==============================================================================================================
-- Факультети(Faculties)
-- ■ Ідентифікатор (Id). Унікальний ідентифікатор факультету.
-- ▷ Тип даних — int.
-- ▷ Автоприріст.
-- ▷ Не містить null-значення.
-- ▷ Первинний ключ.
-- #=========================
-- ■ Декан (Dean). Декан факультету.
-- ▷ Тип даних — varchar(255).
-- ▷ Не містить null-значення.
-- ▷ Не може бути порожнім.
-- #=========================
-- ■ Назва (Name). Назва факультету.
-- ▷ Тип даних — varchar(100).
-- ▷ Не містить null-значення.
-- ▷ Не може бути порожньою.
-- ▷ Має бути унікальною.

CREATE TABLE FACULTIES (
	ID SERIAL NOT NULL PRIMARY KEY,
	DEAN VARCHAR(255) NOT NULL CHECK(DEAN != ''),
	NAME VARCHAR(100) NOT NULL CHECK(NAME != '') UNIQUE
)

INSERT INTO FACULTIES (DEAN, NAME) VALUES
('Петренко Иван Иванович', 'Факультет экономики и IT'),
('Сидоренко Елена Петровна', 'Факультет медицины'),
('Коваленко Андрей Сергеевич', 'Факультет юриспруденции'),
('Мельник Наталья Викторовна', 'Факультет инженерии и технологий'),
('Ткаченко Олег Михайлович', 'Факультет психологии и социальных наук'),
('Бондаренко Екатерина Павловна', 'Факультет биологии и экологии'),
('Шевченко Владимир Александрович', 'Факультет физики и математики'),
('Кузьменко Марина Владимировна', 'Факультет химии и материаловедения'),
('Гончаренко Сергей Игоревич', 'Факультет международных отношений'),
('Лысенко Юлия Алексеевна', 'Факультет искусств и дизайна');

SELECT * FROM FACULTIES;

-- #==============================================================================================================
-- Групи (Groups)
-- ■ Ідентифікатор (Id). Унікальний ідентифікатор групи.
-- ▷ Тип даних — int.
-- ▷ Автоприріст.
-- ▷ Не містить null-значення.
-- ▷ Первинний ключ.
-- #=========================
-- ■ Назва (Name). Назва групи.
-- ▷ Тип даних — varchar(10).
-- ▷ Не містить null-значення.
-- ▷ Не може бути порожньою.
-- ▷ Має бути унікальною.
-- #=========================
-- ■ Рейтинг (Rating). Рейтинг групи.
-- ▷ Тип даних — int.
-- ▷ Не містить null-значення.
-- ▷ Має бути в діапазоні від 0 до 5.
-- #=========================
-- ■ Курс (Year). Курс (рік), на якому навчається група.
-- ▷ Тип даних — int.
-- ▷ Не містить null-значення.
-- ▷ Має бути в діапазоні від 1 до 5.

CREATE TABLE GROUPS_TABLE (
	ID SERIAL NOT NULL PRIMARY KEY,
	NAME VARCHAR(100) NOT NULL CHECK(NAME != '') UNIQUE,
	RATING INT NOT NULL CHECK(RATING >=0 AND RATING <=5),
	YEAR INT NOT NULL CHECK(YEAR >=0 AND YEAR <=5)
)

INSERT INTO GROUPS_TABLE (NAME, RATING, YEAR) VALUES
('Группа ЭК-101', 4, 1),
('Группа ЭК-102', 5, 1),
('Группа ЭК-103', 3, 1),
('Группа ЭК-201', 4, 2),
('Группа ЭК-202', 5, 2),
('Группа ЭК-203', 3, 2),
('Группа ЭК-301', 4, 3),
('Группа ЭК-302', 5, 3),
('Группа ЭК-303', 2, 3),
('Группа ЭК-304', 3, 3),
('Группа ЭК-401', 4, 4),
('Группа ЭК-402', 5, 4),
('Группа ЭК-403', 3, 4),
('Группа ЭК-404', 2, 4),
('Группа ЭК-501', 4, 5),
('Группа ЭК-502', 5, 5),
('Группа ЭК-503', 3, 5),
('Группа ЭК-504', 2, 5),
('Группа IT-101', 4, 1),
('Группа IT-102', 5, 1),
('Группа IT-201', 3, 2),
('Группа IT-202', 4, 2),
('Группа IT-301', 5, 3),
('Группа IT-302', 3, 3),
('Группа IT-401', 4, 4),
('Группа IT-402', 2, 4),
('Группа IT-501', 5, 5),
('Группа IT-502', 3, 5),
('Группа IT-503', 4, 5),
('Группа IT-504', 2, 5);

SELECT * FROM GROUPS_TABLE;

-- #==============================================================================================================
-- Викладачі(Teachers)
-- ■ Ідентифікатор (Id). Унікальний ідентифікатор
-- викладача.
-- ▷ Тип даних — int.
-- ▷ Автоприріст.
-- ▷ Не містить null-значення.
-- ▷ Первинний ключ.
-- #=========================
-- ■ Дата працевлаштування (EmploymentDate). Дата працевлаштування викладача.
-- ▷ Тип даних — date.
-- ▷ Не містить null-значення.
-- ▷ Не може бути менше 01.01.1990.
-- #=========================
-- ■ Асистент (IsAssistant). Чи є викладач асистентом.
-- ▷ Тип даних — bit.
-- ▷ Не містить null-значення.
-- ▷ Значення за замовчуванням — 0.
-- #=========================
-- ■ Професор (IsProfessor). Чи є викладач професором.
-- ▷ Тип даних — bit.
-- ▷ Не містить null-значення.
-- ▷ Значення за замовчуванням — 0.
-- #=========================
-- ■ Ім’я (Name). Ім’я викладача.
-- ▷ Тип даних — nvarchar(max).
-- ▷ Не містить null-значення.
-- ▷ Не може бути порожнє.
-- #=========================
-- ■ Посада (Position). Посада викладача.
-- ▷ Тип даних — varchar(max).
-- ▷ Не містить null-значення.
-- ▷ Не може бути порожньою.
-- #=========================
-- ■ Надбавка (Premium). Надбавка викладача.
-- ▷ Тип даних — money.
-- ▷ Не містить null-значення.
-- ▷ Не може бути менше, ніж 0.
-- ▷ Значення за замовчуванням — 0.
-- #=========================
-- ■ Ставка (Salary). Ставка викладача.
-- ▷ Тип даних — money.
-- ▷ Не містить null-значення.
-- ▷ Не може бути меншою або дорівнювати 0.
-- #=========================
-- ■ Прізвище (Surname). Прізвище викладача.
-- ▷ Тип даних — varchar(max).
-- ▷ Не містить null-значення.
-- ▷ Не може бути порожнє.

CREATE TABLE TEACHERS (
	ID SERIAL NOT NULL PRIMARY KEY,
	EMPLOYMENTDATE DATE NOT NULL CHECK(EMPLOYMENTDATE > '1990-01-01'),
	ISASSISTANT BOOLEAN NOT NULL DEFAULT FALSE,
	ISPROFESSOR BOOLEAN NOT NULL DEFAULT FALSE,
	NAME VARCHAR(255) NOT NULL CHECK(NAME != ''),
	SURNAME  VARCHAR(255) NOT NULL CHECK(SURNAME  != ''),
	POSITION VARCHAR(255) NOT NULL CHECK(POSITION != ''),
	PREMIUM NUMERIC(12,2) NOT NULL CHECK(PREMIUM >= 0) DEFAULT 0,
	SALARY NUMERIC(12,2) NOT NULL CHECK(SALARY > 0) DEFAULT 0
);

INSERT INTO TEACHERS (EMPLOYMENTDATE, ISASSISTANT, ISPROFESSOR, NAME, SURNAME, POSITION, PREMIUM, SALARY) VALUES
('2015-09-01', TRUE, FALSE, 'Иван', 'Петренко', 'Ассистент кафедры экономики', 500, 2000),
('2010-03-15', FALSE, TRUE, 'Елена', 'Сидоренко', 'Профессор кафедры IT', 1000, 3500),
('2018-01-20', TRUE, FALSE, 'Андрей', 'Коваленко', 'Ассистент кафедры маркетинга', 400, 1800),
('2005-09-01', FALSE, TRUE, 'Наталья', 'Мельник', 'Профессор кафедры финансов', 1200, 4000),
('2012-08-15', FALSE, TRUE, 'Олег', 'Ткаченко', 'Профессор кафедры бухгалтерского учета', 800, 3200),
('2019-02-01', TRUE, FALSE, 'Катерина', 'Бондаренко', 'Ассистент кафедры цифровой экономики', 300, 1500),
('2008-06-10', FALSE, TRUE, 'Владимир', 'Шевченко', 'Профессор кафедры программирования', 900, 3600),
('2016-09-01', TRUE, FALSE, 'Марина', 'Кузьменко', 'Ассистент кафедры баз данных', 450, 1900),
('2011-11-20', FALSE, TRUE, 'Сергей', 'Гончаренко', 'Профессор кафедры электронной коммерции', 700, 3300),
('2017-03-10', TRUE, FALSE, 'Юлия', 'Лысенко', 'Ассистент кафедры бизнес-анализа', 350, 1700),
('2013-07-01', FALSE, TRUE, 'Александр', 'Кравченко', 'Профессор кафедры маркетинга', 950, 3400),
('2014-05-15', TRUE, FALSE, 'Оксана', 'Мороз', 'Ассистент кафедры финансов', 400, 1800),
('2009-09-01', FALSE, TRUE, 'Игорь', 'Федоренко', 'Профессор кафедры экономики', 1100, 3700),
('2018-08-20', TRUE, FALSE, 'Татьяна', 'Даниленко', 'Ассистент кафедры бухгалтерского учета', 300, 1600),
('2011-02-01', FALSE, TRUE, 'Виктор', 'Семененко', 'Профессор кафедры IT', 1000, 3600),
('2016-09-01', TRUE, FALSE, 'Алина', 'Бондарь', 'Ассистент кафедры программирования', 350, 1700),
('2010-01-10', FALSE, TRUE, 'Николай', 'Ткачук', 'Профессор кафедры баз данных', 900, 3500),
('2019-03-15', TRUE, FALSE, 'Евгения', 'Гаврилюк', 'Ассистент кафедры цифровой экономики', 250, 1500),
('2007-06-20', FALSE, TRUE, 'Павел', 'Козак', 'Профессор кафедры бизнес-анализа', 1200, 4000),
('2015-11-01', TRUE, FALSE, 'Людмила', 'Кириленко', 'Ассистент кафедры электронной коммерции', 300, 1600);

SELECT * FROM TEACHERS;

-- #==============================================================================================================

-- Для бази даних Академія створіть такі запити:
-- 1. Вивести таблицю кафедр, але розташувати її поля у зворотному порядку.
SELECT NAME, FINANCING, ID FROM DEPARTMENTS;

-- 2. Вивести назви груп та їх рейтинги з уточненнями до назв полів відповідно до назви таблиці.
SELECT GROUPS_TABLE.NAME, GROUPS_TABLE.RATING FROM GROUPS_TABLE;

-- 3. Вивести для викладачів їх прізвища, 
-- відсоток ставки по відношенню до надбавки та відсоток ставки по відношенню до зарплати (сума ставки та надбавки).
SELECT
    NAME,
    SURNAME,
    SALARY,
    PREMIUM,
    (PREMIUM / SALARY * 100) AS PercentOfSalary,
    (PREMIUM / (SALARY + PREMIUM) * 100) AS PercentOfTotal
FROM TEACHERS;

-- 4. Вивести таблицю факультетів одним полем у такому форматі: «The dean of faculty [faculty] is [dean].».
SELECT  'The dean of faculty ' || NAME || ' is ' || DEAN || '.' AS FacultyInfo FROM FACULTIES;

-- 5. Вивести прізвища професорів, ставка яких перевищує 1050.
SELECT SURNAME FROM TEACHERS WHERE SALARY > 2500;

-- 6. Вивести назви кафедр, фонд фінансування яких менший, ніж 11000 або більший за 25000.
SELECT NAME FROM DEPARTMENTS WHERE FINANCING <= 14000 OR FINANCING >= 18000;

-- 7. Вивести назви факультетів, окрім факультету «Computer Science».
SELECT NAME FROM FACULTIES WHERE NAME <> 'Факультет экономики и IT';

-- 8. Вивести прізвища та посади викладачів, які не є професорами.
SELECT SURNAME FROM TEACHERS WHERE ISPROFESSOR = FALSE;

-- 9. Вивести прізвища, посади, ставки та надбавки асистентів, надбавка яких у діапазоні від 160 до 550.
SELECT SURNAME, POSITION, SALARY, PREMIUM FROM TEACHERS WHERE PREMIUM BETWEEN 160 AND 550;

-- 10. Вивести прізвища та ставки асистентів.
SELECT SURNAME, SALARY FROM TEACHERS WHERE ISASSISTANT = TRUE;

-- 11. Вивести прізвища та посади викладачів, які були прийняті на роботу до 01.01.2000.
SELECT SURNAME, POSITION FROM TEACHERS WHERE EMPLOYMENTDATE < '2010-01-01';

-- 12. Вивести назви кафедр, які в алфавітному порядку розміщені до кафедри «Software Development».
-- Виведене поле назвіть «Name of Department». 
SELECT NAME AS "Name of Department" 
FROM DEPARTMENTS 
WHERE NAME < 'Кафедра программирования и IT-проектов' 
ORDER BY NAME ASC;

-- 13. Вивести прізвища асистентів із зарплатою (сума ставки та надбавки) не більше 1200.
SELECT SURNAME FROM TEACHERS WHERE SALARY + PREMIUM < 2000 AND ISASSISTANT = TRUE;

-- 14. Вивести назви груп 5-го курсу з рейтингом у діапазоні від 2 до 4.
SELECT NAME FROM GROUPS_TABLE WHERE RATING BETWEEN 2 AND 4 AND YEAR = 5;

-- 15. Вивести прізвища асистентів зі ставкою менше, ніж 550 або надбавкою менше, ніж 200.
SELECT SURNAME FROM TEACHERS WHERE ISASSISTANT = TRUE AND SALARY < 1500 OR PREMIUM < 400;