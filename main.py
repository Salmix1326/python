# Модуль 16
# Використання баз даних (частина 3)
# Взаємодія з Redis на рівні консолі
# 1. Встановіть Redis на свій комп'ютер та запустіть сервер.
# 2. Використовуйте Redis CLI для виконання завдань.
# ==========================================================
# salmix@SalmixPC:~$ redis-cli
# 1. Створення ключів та значень. Створіть ключ "username" та присвойте йому ваше ім'я.

# 127.0.0.1:6379> set username Alex
# OK

# ==========================================================
# 2. Робота зі списками
# Створіть список "todo_list" і додайте до нього завдання:
# "Поготувати обід" та "Вивчити Redis".
# Виведіть всі завдання зі списку.

# 127.0.0.1:6379> lpush todo_list make_dinner learn_redis
# (integer) 2
# 127.0.0.1:6379> lrange todo_list 0 -1
# 1) "learn_redis"
# 2) "make_dinner"

# ==========================================================
# 3. Робота з хешами
# Створіть хеш "user_data" з полями "age" та "country". Задайте вік і країну за вашим вибором.
# Виведіть всю інформацію з хешу.

# 127.0.0.1:6379> hset user_data age 23 country Ukraine
# (integer) 2
# 127.0.0.1:6379> hgetall user_data
# 1) "age"
# 2) "23"
# 3) "country"
# 4) "Ukraine"

# ==========================================================
# 4. Робота з множинами
# Створіть множину "tags" та додайте до неї елементи: "programming", "redis", "tutorial". Виведіть всі теги з множини.

# 127.0.0.1:6379> sadd tags programming redis tutorial
# (integer) 3
# 127.0.0.1:6379> smembers tags
# 1) "tutorial"
# 2) "programming"
# 3) "redis"

# ==========================================================
# 5. Лічильники
# Створіть лічильник "page_views" і додайте до нього 5 переглядів сторінки. Виведіть поточне значення лічильника

# 127.0.0.1:6379> incrby page_views 5
# (integer) 5
# 127.0.0.1:6379> get page_views
# "5"

# ==========================================================
# 6. Створення ключа із таймаутом
# Створіть ключ "session_token" і присвойте йому значення "abc123". Задайте таймаут 120 секунд.

# 127.0.0.1:6379> setex session_token 120 abc123
# OK

# ==========================================================
# 7. Видалення ключів
# Видаліть ключ "username" і перевірте, чи його значення більше не доступне.

# 127.0.0.1:6379> del username
# (integer) 1
# 127.0.0.1:6379> get username
# (nil)

# ==========================================================
# 8. Паттерни ключів
# Створіть ключ "user:1:name" та присвойте йому ваше ім'я. Виведіть всі ключі, які відповідають паттерну "user:*".

# 127.0.0.1:6379> set user:1:name Alex
# OK
# 127.0.0.1:6379> keys user:*
# 1) "user:1:name"

# ==========================================================
# 9. Робота з бітовими рядками
# Створіть бітовий рядок "online_status" і задайте статус "1" (online). Виведіть статус.

# 127.0.0.1:6379> setbit online_status 0 1
# (integer) 0
# 127.0.0.1:6379> getbit online_status 0
# (integer) 1

# ==========================================================
# 10. Використання транзакцій
# Розпочніть транзакцію та оновіть значення ключа "balance" на 1000. Виведіть поточний баланс під час транзакції.
# Завершіть транзакцію.

# 127.0.0.1:6379> multi
# OK
# 127.0.0.1:6379(TX)> set balance 1000
# QUEUED
# 127.0.0.1:6379(TX)> get balance
# QUEUED
# 127.0.0.1:6379(TX)> exec
# 1) OK
# 2) "1000"

# ==========================================================
# 11. Використання Redis для кешування
# Створіть ключ "cache:popular_articles" та додайте до нього ID популярних статей (можна вигадати ID).

# 127.0.0.1:6379> sadd cache:popular_articles 101 102 103
# (integer) 3

# ==========================================================
# 12. Задача на операції над множинами
# Створіть дві множини "set1" та "set2" з довільними елементами.
# Об'єднайте ці множини в нову множину "union_set".
# Знайдіть перетин множин "set1" та "set2" і збережіть його в новій множині "intersection_set".

# 127.0.0.1:6379> SADD set1 "apple" "banana" "cherry"
# (integer) 3
# 127.0.0.1:6379> SADD set2 "banana" "cherry" "date" "fig"
# (integer) 4
# 127.0.0.1:6379> SUNIONSTORE union_set set1 set2
# (integer) 5
# 127.0.0.1:6379> SINTERSTORE intersection_set set1 set2
# (integer) 2
# 127.0.0.1:6379> SMEMBERS union_set
# 1) "cherry"
# 2) "apple"
# 3) "date"
# 4) "banana"
# 5) "fig"
# 127.0.0.1:6379> SMEMBERS intersection_set
# 1) "banana"
# 2) "cherry"

# ==========================================================
# 13. Використання паттерну Pub/Sub
# Підпишіться на канал "messages" та виведіть всі повідомлення, які прийдуть у цей канал.

# 127.0.0.1:6379> SUBSCRIBE messages
# Reading messages... (press Ctrl-C to quit)
# 1) "subscribe"
# 2) "messages"
# 3) (integer) 1
# PUBLISH messages "Hello, world!"
# PUBLISH messages "Redis Pub/Sub is working!"
# 1) "message"
# 2) "messages"
# 3) "Hello, world!"
# 1) "message"
# 2) "messages"
# 3) "Redis Pub/Sub is working!"
# ^C(171.46s)

# ==========================================================
# 14. Робота з геоданими
# Створіть ключ "locations" та додайте до нього координати (широта, довгота) для місць вашого вибору.

# 127.0.0.1:6379> GEOADD locations 30.5234 50.4501 "Kyiv"
# (integer) 1
# 127.0.0.1:6379> GEOADD locations 24.0311 49.8397 "Lviv"
# (integer) 1
# 127.0.0.1:6379> GEOADD locations 36.2328 49.9935 "Dnipro"
# (integer) 1
# 127.0.0.1:6379> GEOPOS locations Kyiv Lviv Dnipro
# 1) 1) "30.52340179681777954"
#    2) "50.45010014686975808"
# 2) 1) "24.03109878301620483"
#    2) "49.83969873616238999"
# 3) 1) "36.2328001856803894"
#    2) "49.99350054666875565"

# ==========================================================
# 15. Видалення елементів списку
# Створіть у Redis ключ "tasks" і додайте до нього три початкові завдання: "Task 1", "Task 2", "Task 3".
# Виведіть всі завдання, додайте нове завдання "Task 4" та видаліть перше завдання.
# Після цього виведіть оновлений список завдань "tasks".

# 127.0.0.1:6379> lpush tasks task1 task2 task3
# (integer) 3
# 127.0.0.1:6379> rpush tasks task4
# (integer) 4
# 127.0.0.1:6379> lpop tasks 1
# 1) "task3"
# 127.0.0.1:6379> rpop tasks 1
# 1) "task4"
# 127.0.0.1:6379> lrange tasks 0 -1
# 1) "task2"
# 2) "task1"
# 127.0.0.1:6379> lpop tasks 0
# (empty array)
# 127.0.0.1:6379> lpop tasks 1
# 1) "task2"
# 127.0.0.1:6379> rpop tasks 1
# 1) "task1"

# ==========================================================
# 16. Робота з HyperLogLog
# Створіть гіперлоглог "unique_users" та додайте до нього ідентифікатори користувачів (можна вигадати).
# 127.0.0.1:6379> PFADD unique_users user1 user2 user3 user4 user5 user1 user2
# (integer) 1
# 127.0.0.1:6379> PFCOUNT unique_users
# (integer) 5

# ==========================================================
# 17. Робота з рядками
# Створіть ключ "message_queue" та додайте до нього повідомлення (рядки). Прочитайте та виведіть всі повідомлення.

# 127.0.0.1:6379> SET message_queue "Hello"
# OK
# 127.0.0.1:6379> APPEND message_queue ", world!"
# (integer) 13
# 127.0.0.1:6379> APPEND message_queue ", Redis is cool!"
# (integer) 29
# 127.0.0.1:6379> GET message_queue
# "Hello, world!, Redis is cool!"

# ==========================================================
# 127.0.0.1:6379> flushall
# OK
# 127.0.0.1:6379> exit